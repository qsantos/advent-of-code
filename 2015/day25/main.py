def offset_at(i: int, j: int) -> int:
    # 1 + ∑[1; i -1] + ∑[i + 1; i + j]
    return 1 + (i + j - 1) * (i + j) // 2 - i


def code_at(i: int, j: int) -> int:
    return (20151125 * pow(252533, offset_at(i, j) - 1, 33554393)) % 33554393


offsets = [
    [1, 3, 6, 10, 15, 21],
    [2, 5, 9, 14, 20],
    [4, 8, 13, 19],
    [7, 12, 18],
    [11, 17],
    [16],
]
for i, row in enumerate(offsets):
    for j, v in enumerate(row):
        assert offset_at(i + 1, j + 1) == v


values = [
    [20151125, 18749137, 17289845, 30943339, 10071777, 33511524],
    [31916031, 21629792, 16929656, 7726640, 15514188, 4041754],
    [16080970, 8057251, 1601130, 7981243, 11661866, 16474243],
    [24592653, 32451966, 21345942, 9380097, 10600672, 31527494],
    [77061, 17552253, 28094349, 6899651, 9250759, 31663883],
    [33071741, 6796745, 25397450, 24659492, 1534922, 27995004],
]
for i, row in enumerate(values):
    for j, v in enumerate(row):
        assert code_at(i + 1, j + 1) == v

assert code_at(2947, 3029) == 19980801
